{"version":3,"sources":["hooks/usePosition.js","components/TempChart.js","components/PressureChart.js","components/BarChart.js","components/Arrow.js","components/Swiper.js","components/LegendList.js","App.js","index.js"],"names":["usePosition","useState","error","setError","position","setPosition","useEffect","geo","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","message","ReferenceLabel","props","fill","value","textAnchor","fontSize","viewBox","dy","dx","x","width","y","Chart","temperatures","data","map","obj","push","Math","round","temp","height","margin","left","right","top","type","dataKey","stroke","label","hide","Fragment","className","style","backgroundColor","Arrow","transform","deg","d","direction","getDirectionFromDeg","Swiper","getHours","timestamp","h","Date","m","getMinutes","params","navigation","nextEl","prevEl","scrollbar","el","slidesPerView","grabCursor","freeMode","breakpoints","1024","hourly","index","key","toString","dt","getDay","src","weather","icon","alt","main","BarChart","rain","wind_deg","wind_speed","LegendList","App","usePositon","setWeather","URL","a","fetch","then","res","json","result","fetchData","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3cee9a9.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\r\n\r\nconst usePosition = () => {\r\n\tconst [error, setError] = useState(null);\r\n  const [position, setPosition] = useState();\r\n\r\n  useEffect(() => {\r\n    const geo = navigator.geolocation;\r\n\t\tif(!geo) {\r\n\t\t\tsetError('Geolocation is not supported.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst handleSuccess = position => {\r\n\t\t\tconst { latitude, longitude } = position.coords;\r\n\t\t\tsetPosition({\r\n\t\t\t\tlatitude,\r\n\t\t\t\tlongitude\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tconst handleError = error => {\r\n\t\t\tsetError(error.message);\r\n\t\t};\r\n\r\n\t\tgeo.getCurrentPosition(handleSuccess, handleError);\r\n\t\t\r\n\t}, []);\r\n\r\n\treturn { position, error };\r\n}\r\n\r\nexport default usePosition;\r\n","import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis } from 'recharts';\r\n\r\nimport './TempChart.css';\r\n\r\n//TODO przeniesc do osobnego pliku\r\nfunction ReferenceLabel(props) {\r\n  const { \r\n      fill, value, textAnchor, \r\n      fontSize, viewBox, dy, dx,\r\n  } = props;\r\n  const x = viewBox.width + viewBox.x - 7;\r\n  const y = viewBox.y - 10;\r\n  return (\r\n      <text \r\n          x={x} y={y}\r\n          dy={dy}\r\n          dx={dx}\r\n          fill={fill}\r\n          fontSize={fontSize || 14} \r\n          textAnchor={textAnchor}>\r\n          {`${value}\\u00b0`}\r\n      </text>\r\n  )\r\n}\r\n\r\nfunction Chart(props) {  \r\n  const temperatures = [];\r\n  props.data.map(obj => temperatures.push(\r\n    {\r\n      'temp': Math.round(obj.temp)\r\n    }\r\n  ))\r\n  \r\n  return (\r\n    <LineChart width={2840} height={110} data={temperatures}\r\n    margin={{ left: 10, right: 10, top: 30}}>\r\n      <Line type=\"monotone\" dataKey=\"temp\" stroke=\"#f5d742\" label={<ReferenceLabel/>}/>\r\n      <YAxis hide={true}/>\r\n      <XAxis dataKey=\"dt\" hide={true}>\r\n      </XAxis>\r\n    </LineChart>\r\n  )\r\n}\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis } from 'recharts';\r\n\r\nimport './PressureChart.css';\r\n\r\n//TODO przeniesc do osobnego pliku - powtarza się\r\nfunction ReferenceLabel(props) {\r\n  const { \r\n      fill, value, textAnchor, \r\n      fontSize, viewBox, dy, dx,\r\n  } = props;\r\n  const x = viewBox.width + viewBox.x - 20;\r\n  const y = viewBox.y - 10;\r\n  return (\r\n      <text \r\n          x={x} y={y}\r\n          dy={dy}\r\n          dx={dx}\r\n          fill={fill}\r\n          fontSize={fontSize || 10} \r\n          textAnchor={textAnchor}>\r\n          {`${value} hPa`}\r\n      </text>\r\n  )\r\n}\r\n\r\nfunction Chart(props) {  \r\n  return (\r\n    <LineChart width={2850} height={92} data={props.data}\r\n    margin={{ left: 20, right: 10, top: 30}}>\r\n      <Line type=\"monotone\" dataKey=\"pressure\" stroke=\"#000\" label={<ReferenceLabel/>}/>\r\n      <YAxis hide={true}/>\r\n      <XAxis dataKey=\"dt\" hide={true}>\r\n      </XAxis>\r\n    </LineChart>\r\n  )\r\n}\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\n\r\nfunction Chart(props) {\r\n  let height = props.data * 100\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"swiper-item-rain-wrapper\">\r\n        <div className=\"swiper-item-rain-bar\" style={{height: `${height}%`, backgroundColor: '#33ccff'}}></div>\r\n        <div className=\"swiper-item-rain-label\">{props.data > 0 ? <span>{props.data} mm</span> : null}</div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\n\r\nfunction getDirectionFromDeg(deg) {\r\n  let direction = '';\r\n  if((deg > 337.5 && deg <= 360) || (deg >= 0 && deg < 22.5)) {\r\n    direction = 'Południowy';\r\n  } else if (deg > 22.5 && deg < 67.5) {\r\n    direction = 'Pd.-Zach.';\r\n  } else if (deg > 67.5 && deg < 112.5) {\r\n    direction = 'Zachodni';\r\n  } else if ( deg > 112.5 && deg < 157.5) {\r\n    direction = 'Pn.-Zach.';\r\n  } else if (deg > 157.5 && deg < 202.5) {\r\n    direction = 'Północny';\r\n  } else if (deg > 202.5 && deg < 247.5) {\r\n    direction = 'Pn.-Wsch.';\r\n  } else if (deg > 247.5 && deg < 292.5 ) {\r\n    direction = 'Wschodni';\r\n  } else if (deg > 292.5 && deg < 337.5) {\r\n    direction = 'Pd.-Wsch.';\r\n  }\r\n  return direction\r\n}\r\n\r\nfunction Arrow(props) {\r\n  return (\r\n    <div className=\"arrow-container\">\r\n      <svg \r\n        className=\"arrow-icon\"\r\n        style={{transform: `rotate(${props.deg}deg)`}}\r\n        x=\"0px\" \r\n        y=\"0px\"\r\n        viewBox=\"0 0 511.995 511.995\">\r\n        <g>\r\n          <path d=\"M509.758,480.649L275.091,11.315c-7.232-14.464-30.955-14.464-38.187,0L2.238,480.649\r\n            c-4.267,8.576-2.304,18.944,4.8,25.365c7.147,6.464,17.664,7.317,25.749,2.176l223.211-142.037l223.21,142.037\r\n            c3.52,2.219,7.488,3.328,11.456,3.328c5.141,0,10.261-1.856,14.293-5.504C512.062,499.593,514.024,489.225,509.758,480.649z\"/>\r\n        </g>\r\n      </svg>\r\n      <div>\r\n        {getDirectionFromDeg(props.deg)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Arrow;\r\n","import React from 'react';\r\nimport Carousel from 'react-id-swiper';\r\n\r\nimport './Swiper.css';\r\nimport TempChart from './TempChart';\r\nimport PressureChart from './PressureChart';\r\nimport BarChart from './BarChart';\r\nimport Arrow from './Arrow';\r\n\r\n\r\n\r\nfunction Swiper ({data}) {  \r\n  const getHours = (timestamp) => {\r\n    let h = new Date(timestamp*1000).getHours();\r\n    let m = new Date(timestamp*1000).getMinutes();\r\n    \r\n    h = (h<10) ? '0' + h : h;\r\n    m = (m<10) ? '0' + m : m;\r\n    \r\n    let output = h + ':' + m;\r\n    return output;\r\n  }\r\n\r\n  const getDay = (timestamp) => {\r\n    let a = new Date(timestamp*1000);\r\n    let days = ['Niedziela','Poniedziałek','Wtorek','Środa','Czwartek','Piątek','Sobota'];\r\n    let dayOfWeek = days[a.getDay()]\r\n    return dayOfWeek;\r\n  }\r\n\r\n  const params = {\r\n    navigation: {\r\n      nextEl: '.swiper-button-next',\r\n      prevEl: '.swiper-button-prev'\r\n    },\r\n    scrollbar: {\r\n      el: '.swiper-scrollbar',\r\n      hide: false\r\n    },\r\n    slidesPerView: 9,\r\n    grabCursor: true,\r\n    freeMode: true,\r\n    breakpoints: {\r\n      1024: {\r\n        slidesPerView: 9,\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <Carousel {...params}>\r\n      {\r\n        data.map((hourly, index) => \r\n          <div \r\n            className=\"swiper-item\"\r\n            key={index.toString()}>\r\n              <div className=\"swiper-item-day\">\r\n                {getHours(hourly.dt) === \"00:00\" ? (\r\n                  <span className=\"swiper-item-day-text\">\r\n                    {getDay(hourly.dt)}\r\n                  </span>\r\n                ):(\r\n                  null\r\n                )}\r\n              </div>\r\n              <div className=\"swiper-item-hour\"> \r\n                {getHours(hourly.dt)}\r\n              </div>\r\n              <div className=\"swiper-item-weather\">\r\n                <img \r\n                  className=\"weather-icon\"\r\n                  src={`https://openweathermap.org/img/wn/${hourly.weather[0].icon}@2x.png`}\r\n                  alt={hourly.weather[0].main}/>\r\n              </div>\r\n              {\r\n                index === 0 ? ( \r\n                  <div className=\"swiper-item-temperature\">\r\n                    <TempChart data={data}/>\r\n                  </div>  \r\n                ) : (\r\n                  <div className=\"swiper-item-temperature\"></div> \r\n                )\r\n              }\r\n              <div className=\"swiper-item-rain\">\r\n                <BarChart data={hourly.rain ? hourly.rain['1h'] : 0 }/>\r\n              </div> \r\n              <div className=\"swiper-item-wind\">\r\n                <Arrow deg={hourly.wind_deg}/>\r\n              </div>\r\n              <div className=\"swiper-item-wind-speed\">\r\n                {hourly.wind_speed} m/s\r\n              </div>\r\n              {\r\n                index === 0 ? ( \r\n                  <div className=\"swiper-item-pressure\">\r\n                    <PressureChart data={data}/>\r\n                  </div>  \r\n                ) : (\r\n                  <div className=\"swiper-item-pressure\"></div> \r\n                )\r\n              }\r\n          </div>\r\n        )\r\n      }\r\n    </Carousel>\r\n  )\r\n};\r\n\r\nexport default Swiper;\r\n","import React from 'react';\r\nimport './LegendList.css';\r\n\r\nfunction LegendList () {\r\n  return (\r\n  <ul className=\"list-legend\">\r\n    <li className=\"list-item day\">Dzień</li>\r\n    <li className=\"list-item hour\">Godzina</li>\r\n    <li className=\"list-item weather\">Prognoza</li>\r\n    <li className=\"list-item temperature\">Temperatura</li>\r\n    <li className=\"list-item rain\">Opady</li>\r\n    <li className=\"list-item wind\">Kierunek wiatru</li>\r\n    <li className=\"list-item wind-speed\">Prędkość wiatru</li>\r\n    <li className=\"list-item pressure\">Ciśnienie</li>\r\n  </ul>)\r\n}\r\n\r\nexport default LegendList;\r\n","import React, { useState, useEffect } from 'react';\n\nimport usePositon from './hooks/usePosition';\nimport Swiper from './components/Swiper';\nimport LegendList from './components/LegendList';\nimport './App.css';\n\nconst API_KEY = 'a5c071516384d280f97fc11094a21953';\n\nfunction App() {\n  const {position, error} = usePositon();\n  const [weather, setWeather] = useState([]);\n  \n  useEffect(() => {\n    if(position) {\n      const URL = `https://api.openweathermap.org/data/2.5/onecall?lat=${position.latitude}&lon=${position.longitude}&exclude=current,minutely,daily&units=metric&lang=pl&appid=${API_KEY}`;\n\n      const fetchData = async () => {\n        const result = await fetch(URL)\n          .then(res => res.json())\n          .then(data => data);\n          const hourly = result.hourly;\n        setWeather(hourly);  \n      }\n      fetchData();\n    } \n\n  }, [position, error]);\n\n  return (\n      <div className=\"app\">\n        <div className=\"app-wrapper\">\n          {\n            weather.length > 0 ? (\n              <React.Fragment>\n                <LegendList/>\n                <Swiper data={weather}/>\n              </React.Fragment>\n            ) : (\n              <div>...Loading</div>\n            )\n          }\n        </div>\n      </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'swiper/css/swiper.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}